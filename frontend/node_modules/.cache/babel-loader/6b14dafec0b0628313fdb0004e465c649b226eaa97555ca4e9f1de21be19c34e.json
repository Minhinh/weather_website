{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\COS30049_AI_Python_ReactJS\\\\weather_website\\\\frontend\\\\src\\\\components\\\\HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherSearch = () => {\n  _s();\n  const [location, setLocation] = useState('');\n  const [weatherData, setWeatherData] = useState(null);\n  const handleSearch = async () => {\n    const response = await fetch(`http://127.0.0.1:8000/predict/weather/${location}`);\n    if (response.ok) {\n      const data = await response.json();\n      setWeatherData(data);\n    } else {\n      console.error(\"Location not found\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: location,\n      onChange: e => setLocation(e.target.value),\n      placeholder: \"Enter location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Weather Prediction for \", weatherData.location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Min Temperature: \", weatherData.temperature_predictions.min_temp, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Max Temperature: \", weatherData.temperature_predictions.max_temp, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humidity at 9 AM: \", weatherData.humidity_predictions.humidity_9am, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humidity at 3 PM: \", weatherData.humidity_predictions.humidity_3pm, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wind Speed at 9 AM: \", weatherData.wind_speed_predictions.wind_speed_9am, \" km/h\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wind Speed at 3 PM: \", weatherData.wind_speed_predictions.wind_speed_3pm, \" km/h\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(WeatherSearch, \"zlE3FMrl9OiQCTcUkwJ/z2erc9w=\");\n_c = WeatherSearch;\nexport default WeatherSearch;\nvar _c;\n$RefreshReg$(_c, \"WeatherSearch\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","WeatherSearch","_s","location","setLocation","weatherData","setWeatherData","handleSearch","response","fetch","ok","data","json","console","error","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","temperature_predictions","min_temp","max_temp","humidity_predictions","humidity_9am","humidity_3pm","wind_speed_predictions","wind_speed_9am","wind_speed_3pm","_c","$RefreshReg$"],"sources":["C:/Code/COS30049_AI_Python_ReactJS/weather_website/frontend/src/components/HomePage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst WeatherSearch = () => {\r\n    const [location, setLocation] = useState('');\r\n    const [weatherData, setWeatherData] = useState(null);\r\n\r\n    const handleSearch = async () => {\r\n        const response = await fetch(`http://127.0.0.1:8000/predict/weather/${location}`);\r\n        if (response.ok) {\r\n            const data = await response.json();\r\n            setWeatherData(data);\r\n        } else {\r\n            console.error(\"Location not found\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input \r\n                type=\"text\" \r\n                value={location} \r\n                onChange={(e) => setLocation(e.target.value)} \r\n                placeholder=\"Enter location\"\r\n            />\r\n            <button onClick={handleSearch}>Search</button>\r\n\r\n            {weatherData && (\r\n                <div>\r\n                    <h2>Weather Prediction for {weatherData.location}</h2>\r\n                    <p>Min Temperature: {weatherData.temperature_predictions.min_temp}°C</p>\r\n                    <p>Max Temperature: {weatherData.temperature_predictions.max_temp}°C</p>\r\n                    <p>Humidity at 9 AM: {weatherData.humidity_predictions.humidity_9am}%</p>\r\n                    <p>Humidity at 3 PM: {weatherData.humidity_predictions.humidity_3pm}%</p>\r\n                    <p>Wind Speed at 9 AM: {weatherData.wind_speed_predictions.wind_speed_9am} km/h</p>\r\n                    <p>Wind Speed at 3 PM: {weatherData.wind_speed_predictions.wind_speed_3pm} km/h</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WeatherSearch;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}