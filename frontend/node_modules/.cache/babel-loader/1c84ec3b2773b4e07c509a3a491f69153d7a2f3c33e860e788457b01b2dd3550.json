{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\COS30049_AI_Python_ReactJS\\\\weather_website\\\\frontend\\\\src\\\\components\\\\HomePage.jsx\",\n  _s = $RefreshSig$();\n// ForecastOverview.jsx\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForecastOverview = ({\n  location\n}) => {\n  _s();\n  const [dailyPredictions, setDailyPredictions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      if (location) {\n        setLoading(true);\n        try {\n          const response = await fetch('http://127.0.0.1:8000/predict', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              location\n            })\n          });\n          if (!response.ok) {\n            throw new Error('Failed to fetch weather data');\n          }\n          const data = await response.json();\n          setDailyPredictions(data);\n        } catch (err) {\n          setError(err.message);\n        } finally {\n          setLoading(false);\n        }\n      }\n    };\n    fetchWeatherData();\n  }, [location]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecast-overview\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Forecast Overview for \", location]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daily-forecast\",\n      children: dailyPredictions.map(daily => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"daily-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [daily.day_of_week, \" - \", daily.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Min Temp: \", daily.min_temp, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Max Temp: \", daily.max_temp, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Humidity (9 AM): \", daily.humidity_9am, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Humidity (3 PM): \", daily.humidity_3pm, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Wind Speed (9 AM): \", daily.wind_speed_9am, \" km/h\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Wind Speed (3 PM): \", daily.wind_speed_3pm, \" km/h\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Accidents: \", daily.total_accidents]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Rainfall: \", daily.rainfall, \" mm\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Hourly Forecast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hourly-forecast\",\n          children: daily.hourly_predictions.map(hour => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hourly-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Hour: \", hour.hour, \":00\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Temp: \", hour.temperature, \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Humidity: \", hour.humidity, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Wind Speed: \", hour.wind_speed, \" km/h\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Wind Gust Speed: \", hour.wind_gust_speed, \" km/h\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Rainfall: \", hour.rainfall, \" mm\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 37\n            }, this)]\n          }, hour.hour, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)]\n      }, daily.date, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(ForecastOverview, \"96dpB632Bu1mYySL4LLHUX1oJFg=\");\n_c = ForecastOverview;\nexport default ForecastOverview;\nvar _c;\n$RefreshReg$(_c, \"ForecastOverview\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ForecastOverview","location","_s","dailyPredictions","setDailyPredictions","loading","setLoading","error","setError","fetchWeatherData","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","daily","day_of_week","date","min_temp","max_temp","humidity_9am","humidity_3pm","wind_speed_9am","wind_speed_3pm","total_accidents","rainfall","hourly_predictions","hour","temperature","humidity","wind_speed","wind_gust_speed","_c","$RefreshReg$"],"sources":["C:/Code/COS30049_AI_Python_ReactJS/weather_website/frontend/src/components/HomePage.jsx"],"sourcesContent":["// ForecastOverview.jsx\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst ForecastOverview = ({ location }) => {\r\n    const [dailyPredictions, setDailyPredictions] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchWeatherData = async () => {\r\n            if (location) {\r\n                setLoading(true);\r\n                try {\r\n                    const response = await fetch('http://127.0.0.1:8000/predict', {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                        },\r\n                        body: JSON.stringify({ location }),\r\n                    });\r\n                    if (!response.ok) {\r\n                        throw new Error('Failed to fetch weather data');\r\n                    }\r\n                    const data = await response.json();\r\n                    setDailyPredictions(data);\r\n                } catch (err) {\r\n                    setError(err.message);\r\n                } finally {\r\n                    setLoading(false);\r\n                }\r\n            }\r\n        };\r\n\r\n        fetchWeatherData();\r\n    }, [location]);\r\n\r\n    if (loading) return <div>Loading...</div>;\r\n    if (error) return <div>Error: {error}</div>;\r\n\r\n    return (\r\n        <div className=\"forecast-overview\">\r\n            <h2>Forecast Overview for {location}</h2>\r\n            <div className=\"daily-forecast\">\r\n                {dailyPredictions.map((daily) => (\r\n                    <div key={daily.date} className=\"daily-card\">\r\n                        <h3>{daily.day_of_week} - {daily.date}</h3>\r\n                        <p>Min Temp: {daily.min_temp}°C</p>\r\n                        <p>Max Temp: {daily.max_temp}°C</p>\r\n                        <p>Humidity (9 AM): {daily.humidity_9am}%</p>\r\n                        <p>Humidity (3 PM): {daily.humidity_3pm}%</p>\r\n                        <p>Wind Speed (9 AM): {daily.wind_speed_9am} km/h</p>\r\n                        <p>Wind Speed (3 PM): {daily.wind_speed_3pm} km/h</p>\r\n                        <p>Total Accidents: {daily.total_accidents}</p>\r\n                        <p>Rainfall: {daily.rainfall} mm</p>\r\n                        <h4>Hourly Forecast</h4>\r\n                        <div className=\"hourly-forecast\">\r\n                            {daily.hourly_predictions.map((hour) => (\r\n                                <div key={hour.hour} className=\"hourly-card\">\r\n                                    <p>Hour: {hour.hour}:00</p>\r\n                                    <p>Temp: {hour.temperature}°C</p>\r\n                                    <p>Humidity: {hour.humidity}%</p>\r\n                                    <p>Wind Speed: {hour.wind_speed} km/h</p>\r\n                                    <p>Wind Gust Speed: {hour.wind_gust_speed} km/h</p>\r\n                                    <p>Rainfall: {hour.rainfall} mm</p>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ForecastOverview;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}