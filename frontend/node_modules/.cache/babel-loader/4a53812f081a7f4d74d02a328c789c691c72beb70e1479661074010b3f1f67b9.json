{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\COS30049_AI_Python_ReactJS\\\\weather_website\\\\frontend\\\\src\\\\components\\\\ForecastOverview.jsx\",\n  _s = $RefreshSig$();\n// ForecastOverview.jsx\nimport React, { useEffect, useState } from 'react';\nimport { Card, CardContent, Typography, Box } from '@mui/material';\nimport './ForecastOverview.css'; // Make sure to create this CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForecastOverview = ({\n  location\n}) => {\n  _s();\n  const [dailyPredictions, setDailyPredictions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      if (location) {\n        setLoading(true);\n        try {\n          const response = await fetch('http://127.0.0.1:8000/predict', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              location\n            })\n          });\n          if (!response.ok) {\n            throw new Error('Failed to fetch weather data');\n          }\n          const data = await response.json();\n          setDailyPredictions(data);\n        } catch (err) {\n          setError(err.message);\n        } finally {\n          setLoading(false);\n        }\n      }\n    };\n    fetchWeatherData();\n  }, [location]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecast-overview\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: \"forecast-card\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"div\",\n          children: \"Hourly Forecast Prediction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: \"hourly-forecast\",\n          children: dailyPredictions.length > 0 && dailyPredictions[0].hourly_predictions.map(hour => /*#__PURE__*/_jsxDEV(Card, {\n            className: `hourly-item ${hour.weatherCondition || 'default'}` // Default class in case weatherCondition is undefined\n            ,\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: [hour.hour, \":00\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: [\"Temp: \", hour.temperature, \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: hour.weatherCondition ? hour.weatherCondition.charAt(0).toUpperCase() + hour.weatherCondition.slice(1) : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this)\n          }, hour.hour, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"forecast-card\",\n      style: {\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"div\",\n          children: \"7 Days Forecast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: \"daily-forecast\",\n          children: dailyPredictions.map(daily => /*#__PURE__*/_jsxDEV(Box, {\n            className: \"daily-card\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: [daily.day_of_week, \" - \", daily.date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              className: \"hourly-slider\",\n              children: daily.hourly_predictions.map(hour => /*#__PURE__*/_jsxDEV(Box, {\n                className: \"hourly-item\",\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: [hour.hour, \":00 - \", hour.temperature, \"\\xB0C\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: hour.weatherCondition ? hour.weatherCondition.charAt(0).toUpperCase() + hour.weatherCondition.slice(1) : 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 45\n                }, this)]\n              }, hour.hour, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this)]\n          }, daily.date, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(ForecastOverview, \"96dpB632Bu1mYySL4LLHUX1oJFg=\");\n_c = ForecastOverview;\nexport default ForecastOverview;\nvar _c;\n$RefreshReg$(_c, \"ForecastOverview\");","map":{"version":3,"names":["React","useEffect","useState","Card","CardContent","Typography","Box","jsxDEV","_jsxDEV","ForecastOverview","location","_s","dailyPredictions","setDailyPredictions","loading","setLoading","error","setError","fetchWeatherData","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","variant","component","length","hourly_predictions","map","hour","weatherCondition","temperature","charAt","toUpperCase","slice","style","marginTop","daily","day_of_week","date","_c","$RefreshReg$"],"sources":["C:/Code/COS30049_AI_Python_ReactJS/weather_website/frontend/src/components/ForecastOverview.jsx"],"sourcesContent":["// ForecastOverview.jsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Card, CardContent, Typography, Box } from '@mui/material';\r\nimport './ForecastOverview.css'; // Make sure to create this CSS file for styling\r\n\r\nconst ForecastOverview = ({ location }) => {\r\n    const [dailyPredictions, setDailyPredictions] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchWeatherData = async () => {\r\n            if (location) {\r\n                setLoading(true);\r\n                try {\r\n                    const response = await fetch('http://127.0.0.1:8000/predict', {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                        },\r\n                        body: JSON.stringify({ location }),\r\n                    });\r\n                    if (!response.ok) {\r\n                        throw new Error('Failed to fetch weather data');\r\n                    }\r\n                    const data = await response.json();\r\n                    setDailyPredictions(data);\r\n                } catch (err) {\r\n                    setError(err.message);\r\n                } finally {\r\n                    setLoading(false);\r\n                }\r\n            }\r\n        };\r\n\r\n        fetchWeatherData();\r\n    }, [location]);\r\n\r\n    if (loading) return <div>Loading...</div>;\r\n    if (error) return <div>Error: {error}</div>;\r\n\r\n    return (\r\n        <div className=\"forecast-overview\">\r\n            {/* Hourly Forecast Card */}\r\n            <Card className=\"forecast-card\">\r\n                <CardContent>\r\n                    <Typography variant=\"h5\" component=\"div\">\r\n                        Hourly Forecast Prediction\r\n                    </Typography>\r\n                    <Box className=\"hourly-forecast\">\r\n                        {dailyPredictions.length > 0 && dailyPredictions[0].hourly_predictions.map((hour) => (\r\n                            <Card \r\n                                key={hour.hour} \r\n                                className={`hourly-item ${hour.weatherCondition || 'default'}`} // Default class in case weatherCondition is undefined\r\n                            >\r\n                                <CardContent>\r\n                                    <Typography variant=\"body2\">\r\n                                        {hour.hour}:00\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\">\r\n                                        Temp: {hour.temperature}°C\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\">\r\n                                        {hour.weatherCondition ? hour.weatherCondition.charAt(0).toUpperCase() + hour.weatherCondition.slice(1) : 'N/A'}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        ))}\r\n                    </Box>\r\n                </CardContent>\r\n            </Card>\r\n\r\n            {/* 7 Days Forecast Card */}\r\n            <Card className=\"forecast-card\" style={{ marginTop: '20px' }}>\r\n                <CardContent>\r\n                    <Typography variant=\"h5\" component=\"div\">\r\n                        7 Days Forecast\r\n                    </Typography>\r\n                    <Box className=\"daily-forecast\">\r\n                        {dailyPredictions.map((daily) => (\r\n                            <Box key={daily.date} className=\"daily-card\">\r\n                                <Typography variant=\"h6\">\r\n                                    {daily.day_of_week} - {daily.date}\r\n                                </Typography>\r\n                                <Box className=\"hourly-slider\">\r\n                                    {daily.hourly_predictions.map((hour) => (\r\n                                        <Box key={hour.hour} className=\"hourly-item\">\r\n                                            <Typography variant=\"body2\">\r\n                                                {hour.hour}:00 - {hour.temperature}°C\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\">\r\n                                                {hour.weatherCondition ? hour.weatherCondition.charAt(0).toUpperCase() + hour.weatherCondition.slice(1) : 'N/A'}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                    ))}\r\n                                </Box>\r\n                            </Box>\r\n                        ))}\r\n                    </Box>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ForecastOverview;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}