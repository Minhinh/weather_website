{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\COS30049_AI_Python_ReactJS\\\\weather_website\\\\frontend\\\\src\\\\components\\\\HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Homepage = () => {\n  _s();\n  const [locations, setLocations] = useState([]); // State to store the locations\n  const [selectedLocation, setSelectedLocation] = useState(''); // State for the selected location\n  const [predictions, setPredictions] = useState(null); // State for storing the prediction results\n\n  useEffect(() => {\n    // Function to fetch the locations from the FastAPI endpoint\n    const fetchLocations = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/locations');\n        setLocations(response.data); // Store the locations in state\n      } catch (error) {\n        console.error(\"Error fetching locations:\", error);\n      }\n    };\n    fetchLocations();\n  }, []); // Empty dependency array ensures this runs once on mount\n\n  const handleLocationChange = async event => {\n    const location = event.target.value; // Get the selected location from the event\n    setSelectedLocation(location); // Update the selected location state\n\n    if (location) {\n      try {\n        // Fetch predictions based on the selected location\n        const response = await axios.post('http://localhost:8000/predict', {\n          location\n        });\n        setPredictions(response.data); // Store the predictions in state\n      } catch (error) {\n        console.error(\"Error fetching predictions:\", error);\n      }\n    } else {\n      setPredictions(null); // Reset predictions if no location is selected\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather and Accident Predictions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"location-select\",\n      children: \"Select a Location:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"location-select\",\n      value: selectedLocation,\n      onChange: handleLocationChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"--Select a Location--\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), \" \", locations.map(location =>\n      /*#__PURE__*/\n      // Map through locations and create an option for each\n      _jsxDEV(\"option\", {\n        value: location,\n        children: location\n      }, location, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), predictions &&\n    /*#__PURE__*/\n    // Show predictions if available\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Predictions for \", selectedLocation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Min Temperature: \", predictions.min_temp, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Max Temperature: \", predictions.max_temp, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humidity at 9 AM: \", predictions.humidity_9am, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humidity at 3 PM: \", predictions.humidity_3pm, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wind Speed at 9 AM: \", predictions.wind_speed_9am, \" km/h\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wind Speed at 3 PM: \", predictions.wind_speed_3pm, \" km/h\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Accidents Prediction: \", predictions.total_accidents]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Homepage, \"kVpFk/jHVfStgcxZW8u57/kjG7o=\");\n_c = Homepage;\nexport default Homepage;\nvar _c;\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Homepage","_s","locations","setLocations","selectedLocation","setSelectedLocation","predictions","setPredictions","fetchLocations","response","get","data","error","console","handleLocationChange","event","location","target","value","post","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","map","min_temp","max_temp","humidity_9am","humidity_3pm","wind_speed_9am","wind_speed_3pm","total_accidents","_c","$RefreshReg$"],"sources":["C:/Code/COS30049_AI_Python_ReactJS/weather_website/frontend/src/components/HomePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Homepage = () => {\r\n  const [locations, setLocations] = useState([]); // State to store the locations\r\n  const [selectedLocation, setSelectedLocation] = useState(''); // State for the selected location\r\n  const [predictions, setPredictions] = useState(null); // State for storing the prediction results\r\n\r\n  useEffect(() => {\r\n    // Function to fetch the locations from the FastAPI endpoint\r\n    const fetchLocations = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:8000/locations');\r\n        setLocations(response.data); // Store the locations in state\r\n      } catch (error) {\r\n        console.error(\"Error fetching locations:\", error);\r\n      }\r\n    };\r\n\r\n    fetchLocations();\r\n  }, []); // Empty dependency array ensures this runs once on mount\r\n\r\n  const handleLocationChange = async (event) => {\r\n    const location = event.target.value; // Get the selected location from the event\r\n    setSelectedLocation(location); // Update the selected location state\r\n\r\n    if (location) {\r\n      try {\r\n        // Fetch predictions based on the selected location\r\n        const response = await axios.post('http://localhost:8000/predict', { location });\r\n        setPredictions(response.data); // Store the predictions in state\r\n      } catch (error) {\r\n        console.error(\"Error fetching predictions:\", error);\r\n      }\r\n    } else {\r\n      setPredictions(null); // Reset predictions if no location is selected\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Weather and Accident Predictions</h1>\r\n      <label htmlFor=\"location-select\">Select a Location:</label>\r\n      <select id=\"location-select\" value={selectedLocation} onChange={handleLocationChange}>\r\n        <option value=\"\">--Select a Location--</option> {/* Placeholder option */}\r\n        {locations.map(location => ( // Map through locations and create an option for each\r\n          <option key={location} value={location}>{location}</option>\r\n        ))}\r\n      </select>\r\n\r\n      {predictions && ( // Show predictions if available\r\n        <div>\r\n          <h2>Predictions for {selectedLocation}</h2>\r\n          <p>Min Temperature: {predictions.min_temp}°C</p>\r\n          <p>Max Temperature: {predictions.max_temp}°C</p>\r\n          <p>Humidity at 9 AM: {predictions.humidity_9am}%</p>\r\n          <p>Humidity at 3 PM: {predictions.humidity_3pm}%</p>\r\n          <p>Wind Speed at 9 AM: {predictions.wind_speed_9am} km/h</p>\r\n          <p>Wind Speed at 3 PM: {predictions.wind_speed_3pm} km/h</p>\r\n          <p>Total Accidents Prediction: {predictions.total_accidents}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}