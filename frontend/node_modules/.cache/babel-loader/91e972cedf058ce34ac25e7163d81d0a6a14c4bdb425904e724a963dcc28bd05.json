{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\COS30049_AI_Python_ReactJS\\\\weather_website\\\\frontend\\\\src\\\\components\\\\WeatherOverview.jsx\";\n// WeatherOverview.jsx\nimport React from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@mui/material\";\nimport CloudIcon from \"@mui/icons-material/Cloud\";\nimport SunnyIcon from \"@mui/icons-material/WbSunny\";\nimport RainyIcon from \"@mui/icons-material/Water\";\nimport ThermostatAutoIcon from \"@mui/icons-material/ThermostatAuto\";\nimport InvertColorsIcon from \"@mui/icons-material/InvertColors\";\nimport AirIcon from \"@mui/icons-material/Air\";\nimport WbSunnyIcon from \"@mui/icons-material/WbSunny\";\nimport WeatherInfoCard from \"./WeatherInfoCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WeatherOverview({\n  predictions\n}) {\n  var _predictions$, _predictions$2, _predictions$3;\n  const weatherCondition = getWeatherCondition(predictions);\n  const averageTemp = calculateAverageTemp(predictions);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      marginTop: \"20px\",\n      padding: \"20px\",\n      backgroundColor: \"rgba(255, 255, 255, 0.2)\",\n      borderRadius: \"10px\",\n      boxShadow: \"0 2px 10px rgba(0, 0, 0, 0.5)\",\n      height: \"500px\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"space-between\"\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"center\",\n        style: {\n          color: \"#BBDEFB\"\n        },\n        children: \"Weather Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        align: \"center\",\n        style: {\n          color: \"#FFEB3B\"\n        },\n        children: weatherCondition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        align: \"center\",\n        style: {\n          color: \"white\"\n        },\n        children: [getWeatherIcon(weatherCondition), getWeatherMessage(weatherCondition, predictions)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        align: \"center\",\n        style: {\n          color: \"white\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Average Temp: \", averageTemp, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        style: {\n          marginTop: \"100px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(WeatherInfoCard, {\n          title: \"Temperature\",\n          value: `${averageTemp}째C`,\n          icon: /*#__PURE__*/_jsxDEV(ThermostatAutoIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 81\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WeatherInfoCard, {\n          title: \"Humidity\",\n          value: `${(_predictions$ = predictions[0]) === null || _predictions$ === void 0 ? void 0 : _predictions$.humidity_9am}%`,\n          icon: /*#__PURE__*/_jsxDEV(InvertColorsIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 94\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WeatherInfoCard, {\n          title: \"Wind Speed\",\n          value: `${(_predictions$2 = predictions[0]) === null || _predictions$2 === void 0 ? void 0 : _predictions$2.wind_speed_9am} km/h`,\n          icon: /*#__PURE__*/_jsxDEV(AirIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 102\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WeatherInfoCard, {\n          title: \"Sunshine\",\n          value: `${(_predictions$3 = predictions[0]) === null || _predictions$3 === void 0 ? void 0 : _predictions$3.sunshine_hours} hrs`,\n          icon: /*#__PURE__*/_jsxDEV(WbSunnyIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 99\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_c = WeatherOverview;\nconst getWeatherCondition = predictions => {\n  if (predictions.length > 0) {\n    if (predictions[0].rainfall > 0) return \"Rainy Day\";\n    if (predictions[0].max_temp > 30) return \"Sunny Day\";\n    return \"Cloudy Day\";\n  }\n  return \"\";\n};\nconst calculateAverageTemp = predictions => {\n  if (predictions.length > 0) {\n    const maxTemp = predictions[0].max_temp;\n    const minTemp = predictions[0].min_temp;\n    return ((maxTemp + minTemp) / 2).toFixed(1);\n  }\n  return 0;\n};\nconst getWeatherIcon = weatherCondition => {\n  switch (weatherCondition) {\n    case \"Rainy Day\":\n      return /*#__PURE__*/_jsxDEV(RainyIcon, {\n        style: {\n          color: \"yellow\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 14\n      }, this);\n    case \"Sunny Day\":\n      return /*#__PURE__*/_jsxDEV(SunnyIcon, {\n        style: {\n          color: \"yellow\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 14\n      }, this);\n    default:\n      return /*#__PURE__*/_jsxDEV(CloudIcon, {\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 14\n      }, this);\n  }\n};\nconst getWeatherMessage = (weatherCondition, predictions) => {\n  if (weatherCondition === \"Rainy Day\") {\n    return ` Today the expectation is rainy, with a high temp of ${predictions[0].max_temp}째C. Grab your umbrella!`;\n  } else if (weatherCondition === \"Sunny Day\") {\n    return ` Expect a sunny day with a high temp of ${predictions[0].max_temp}째C. Enjoy the sunshine!`;\n  }\n  return ` It might be cloudy today with a high temp of ${predictions[0].max_temp}째C.`;\n};\nexport default WeatherOverview;\nvar _c;\n$RefreshReg$(_c, \"WeatherOverview\");","map":{"version":3,"names":["React","Card","CardContent","Typography","Grid","CloudIcon","SunnyIcon","RainyIcon","ThermostatAutoIcon","InvertColorsIcon","AirIcon","WbSunnyIcon","WeatherInfoCard","jsxDEV","_jsxDEV","WeatherOverview","predictions","_predictions$","_predictions$2","_predictions$3","weatherCondition","getWeatherCondition","averageTemp","calculateAverageTemp","style","marginTop","padding","backgroundColor","borderRadius","boxShadow","height","display","flexDirection","justifyContent","children","variant","align","color","fileName","_jsxFileName","lineNumber","columnNumber","getWeatherIcon","getWeatherMessage","container","spacing","title","value","icon","humidity_9am","wind_speed_9am","sunshine_hours","_c","length","rainfall","max_temp","maxTemp","minTemp","min_temp","toFixed","$RefreshReg$"],"sources":["C:/Code/COS30049_AI_Python_ReactJS/weather_website/frontend/src/components/WeatherOverview.jsx"],"sourcesContent":["// WeatherOverview.jsx\r\nimport React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@mui/material\";\r\nimport CloudIcon from \"@mui/icons-material/Cloud\";\r\nimport SunnyIcon from \"@mui/icons-material/WbSunny\";\r\nimport RainyIcon from \"@mui/icons-material/Water\";\r\nimport ThermostatAutoIcon from \"@mui/icons-material/ThermostatAuto\";\r\nimport InvertColorsIcon from \"@mui/icons-material/InvertColors\";\r\nimport AirIcon from \"@mui/icons-material/Air\";\r\nimport WbSunnyIcon from \"@mui/icons-material/WbSunny\";\r\nimport WeatherInfoCard from \"./WeatherInfoCard\";\r\n\r\nfunction WeatherOverview({ predictions }) {\r\n  const weatherCondition = getWeatherCondition(predictions);\r\n  const averageTemp = calculateAverageTemp(predictions);\r\n\r\n  return (\r\n    <Card\r\n      style={{\r\n        marginTop: \"20px\",\r\n        padding: \"20px\",\r\n        backgroundColor: \"rgba(255, 255, 255, 0.2)\",\r\n        borderRadius: \"10px\",\r\n        boxShadow: \"0 2px 10px rgba(0, 0, 0, 0.5)\",\r\n        height: \"500px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\",\r\n      }}\r\n    >\r\n      <CardContent>\r\n        <Typography variant=\"h5\" align=\"center\" style={{ color: \"#BBDEFB\" }}>\r\n          Weather Overview\r\n        </Typography>\r\n        <Typography variant=\"h6\" align=\"center\" style={{ color: \"#FFEB3B\" }}>\r\n          {weatherCondition}\r\n        </Typography>\r\n        <Typography variant=\"body1\" align=\"center\" style={{ color: \"white\" }}>\r\n          {getWeatherIcon(weatherCondition)}\r\n          {getWeatherMessage(weatherCondition, predictions)}\r\n        </Typography>\r\n        <Typography variant=\"body1\" align=\"center\" style={{ color: \"white\" }}>\r\n          <strong>Average Temp: {averageTemp}째C</strong>\r\n        </Typography>\r\n\r\n        <Grid container spacing={2} style={{ marginTop: \"100px\" }}>\r\n          {/* Temperature, Humidity, and Wind Info Boxes */}\r\n          <WeatherInfoCard title=\"Temperature\" value={`${averageTemp}째C`} icon={<ThermostatAutoIcon />} />\r\n          <WeatherInfoCard title=\"Humidity\" value={`${predictions[0]?.humidity_9am}%`} icon={<InvertColorsIcon />} />\r\n          <WeatherInfoCard title=\"Wind Speed\" value={`${predictions[0]?.wind_speed_9am} km/h`} icon={<AirIcon />} />\r\n          <WeatherInfoCard title=\"Sunshine\" value={`${predictions[0]?.sunshine_hours} hrs`} icon={<WbSunnyIcon />} />\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst getWeatherCondition = (predictions) => {\r\n  if (predictions.length > 0) {\r\n    if (predictions[0].rainfall > 0) return \"Rainy Day\";\r\n    if (predictions[0].max_temp > 30) return \"Sunny Day\";\r\n    return \"Cloudy Day\";\r\n  }\r\n  return \"\";\r\n};\r\n\r\nconst calculateAverageTemp = (predictions) => {\r\n  if (predictions.length > 0) {\r\n    const maxTemp = predictions[0].max_temp;\r\n    const minTemp = predictions[0].min_temp;\r\n    return ((maxTemp + minTemp) / 2).toFixed(1);\r\n  }\r\n  return 0;\r\n};\r\n\r\nconst getWeatherIcon = (weatherCondition) => {\r\n  switch (weatherCondition) {\r\n    case \"Rainy Day\":\r\n      return <RainyIcon style={{ color: \"yellow\" }} />;\r\n    case \"Sunny Day\":\r\n      return <SunnyIcon style={{ color: \"yellow\" }} />;\r\n    default:\r\n      return <CloudIcon style={{ color: \"white\" }} />;\r\n  }\r\n};\r\n\r\nconst getWeatherMessage = (weatherCondition, predictions) => {\r\n  if (weatherCondition === \"Rainy Day\") {\r\n    return ` Today the expectation is rainy, with a high temp of ${predictions[0].max_temp}째C. Grab your umbrella!`;\r\n  } else if (weatherCondition === \"Sunny Day\") {\r\n    return ` Expect a sunny day with a high temp of ${predictions[0].max_temp}째C. Enjoy the sunshine!`;\r\n  }\r\n  return ` It might be cloudy today with a high temp of ${predictions[0].max_temp}째C.`;\r\n};\r\n\r\nexport default WeatherOverview;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}